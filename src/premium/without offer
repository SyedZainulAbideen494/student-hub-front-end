import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './SubscriptionPage.css';
import { API_ROUTES } from '../app_modules/apiRoutes';
import FooterNav from '../app_modules/footernav';
import { useNavigate } from 'react-router-dom';
import { FaCrown } from 'react-icons/fa';
import styled from 'styled-components';
import Confetti from 'react-confetti';

const PaymentComponent = () => {
  const [amount, setAmount] = useState(99); // Default to ₹129 (monthly)
  const [subscriptionPlan, setSubscriptionPlan] = useState('premium');
  const [duration, setDuration] = useState(''); // Always set to 'monthly' now
  const [showPremium, setShowPremium] = useState(true); // State to toggle between free and premium features
  const [isPremium, setIsPremium] = useState(null);
  const [timeLeft, setTimeLeft] = useState(72 * 60 * 60); // 3 days in seconds
  const [showConfetti, setShowConfetti] = useState(false);
  const nav = useNavigate();

  const SubscriptionWrapper = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background: #6d5dfc;
  padding: 1rem;
  font-family: 'Poppins', sans-serif;
`;

const Card = styled.div`
  width: 90%;
  max-width: 380px;
  background: #1c1c1e;
  border-radius: 20px;
  padding: 2rem;
  text-align: center;
  box-shadow: 0px 8px 30px rgba(0, 0, 0, 0.3);
  position: relative;
`;

const Header = styled.div`
  height: 70px;
  border-top-left-radius: 20px;
  border-top-right-radius: 20px;
  position: relative;
  margin: -2rem -2rem 1rem -2rem;

  &::before {
    content: "";
    position: absolute;
    bottom: -15px;
    left: 0;
    width: 100%;
    height: 30px;
    background: #1c1c1e;
    clip-path: ellipse(50% 50% at center bottom);
  }
`;

const Title = styled.p`
  font-size: 1.5rem;
  font-weight: 600;
  color: white;
  margin-bottom: 1rem;
`;

const Plan = styled.div`
  background: ${({ active }) => (active ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)')};
  padding: 1rem;
  border-radius: 12px;
  margin-top: 1rem;
  color: white;
  font-size: 1.1rem;
  font-weight: 500;
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
  transition: 0.3s;
  border: ${({ active }) => (active ? '2px solid #ffcc00' : 'none')};

  &:hover {
    background: rgba(255, 255, 255, 0.25);
  }
`;

const BestValue = styled.span`
  background: #ffcc00;
  color: black;
  font-size: 0.8rem;
  padding: 3px 8px;
  border-radius: 6px;
  font-weight: 600;
`;

const Button = styled.div`
  background: linear-gradient(135deg, #ff8c00, #ff2e63);
  color: white;
  padding: 0.8rem;
  font-size: 1rem;
  font-weight: 600;
  border-radius: 10px;
  margin-top: 1.5rem;
  cursor: pointer;
  transition: 0.3s;

  &:hover {
    background: linear-gradient(135deg, #ff2e63, #ff8c00);
  }
`;

const Countdown = styled.div`
  font-size: 0.9rem;
  margin-top: 1rem;
  color: #ffcc00;
  font-weight: 500;
`;


  const handlePayment = async () => {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        alert('Please log in to subscribe.');
        return;
      }
  
      let planAmount = 99; // Always ₹99 for monthly plan
  
      const { data } = await axios.post(API_ROUTES.getPremium, {
        amount: amount,
        currency: 'INR',
        subscription_plan: subscriptionPlan,
        token,
        duration, // Send the selected duration
      });
  
      const options = {
        key: 'rzp_live_jPX6SxetQbApHC',
        amount: data.order.amount,
        currency: 'INR',
        order_id: data.order.id,
        name: 'Edusify',
        description: `Subscription Payment (${duration})`,
        handler: async (response) => {
          const { data } = await axios.post(API_ROUTES.verifyPayment, {
            payment_id: response.razorpay_payment_id,
            order_id: response.razorpay_order_id,
            signature: response.razorpay_signature,
            token,
            subscription_plan: subscriptionPlan,
            duration, // Send the selected duration
          });
  
          if (data.success) {
            nav('/payment-success');
          } else {
            alert('Payment verification failed!');
          }
        },
        theme: { color: '#000000' },
      };
  
      const razorpayInstance = new window.Razorpay(options);
      razorpayInstance.open();
    } catch (error) {
      console.error('Error initiating payment', error);
    }
  };

  useEffect(() => {
    const token = localStorage.getItem('token');
    if (token) {
      axios.post(API_ROUTES.checkSubscription, {}, { headers: { 'Authorization': token } })
        .then(response => setIsPremium(response.data.premium))
        .catch(() => setIsPremium(false));
    } else {
      setIsPremium(false);
    }
  }, []);

  useEffect(() => {
    // Countdown timer logic
    const interval = setInterval(() => {
      setTimeLeft((prevTime) => prevTime - 1);
    }, 1000);

    if (timeLeft <= 0) {
      clearInterval(interval);
    }

    return () => clearInterval(interval);
  }, [timeLeft]);

  const formatTime = (timeInSeconds) => {
    const hours = Math.floor(timeInSeconds / 3600);
    const minutes = Math.floor((timeInSeconds % 3600) / 60);
    const seconds = timeInSeconds % 60;
    return `${hours}h ${minutes}m ${seconds}s`;
  };

  return (
    <SubscriptionWrapper>
    {showConfetti && <Confetti numberOfPieces={200} />}

    <Card>
      <Header />
      <Title>Pricing Plan</Title>


<Plan
  active={duration === 'weekly'}
  onClick={() => {
    setDuration('weekly');
    setAmount(39);
  }}
>
  <span>Weekly Plan</span>
  <span>₹39/week</span>
</Plan>

<Plan
  active={duration === 'monthly'}
  onClick={() => {
    setDuration('monthly');
    setAmount(99);
  }}
>
  <span>Monthly Plan</span>
  <span>₹99/mo</span>
</Plan>

<Plan
  active={duration === '6months'}
  onClick={() => {
    setDuration('6months');
    setAmount(499);
  }}
>
  <span>6 Months Plan</span>
  <span>
    ₹499 <BestValue>Best Value</BestValue>
  </span>
</Plan>


      <Button onClick={handlePayment}>Continue</Button>
    </Card>
  </SubscriptionWrapper>

  );
};

export default PaymentComponent;
